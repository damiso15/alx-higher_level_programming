The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# matrix = [[1, 2, 3], [4, 5, 6]], div = int
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# matrix = [[1, "school", 3], ["a", 5, 6]], div = int
>>> matrix_divided([[1, "school", 3], ["a", 5, "damy"]], 10)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix = [], div = int
>>> matrix_divided([], 10)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# matrix = [[1, 100, 3], [1, 6]], div = int
>>> matrix_divided([[1, 100, 3], [1, 6]], 5)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# matrix = [[1, 2, 3], [4, 5, 6]], div = str
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "damy")
Traceback (most recent call last):
...
TypeError: div must be a number

# matrix = [[1, 2, 3], [4, 5, 6]], div = 0
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
